---

- name: preparing grid installation template
  template:
    src: "{{ role_path}}/templates/{{ oracle_grid_response_file }}.rsp.j2"
    dest: "/tmp/{{ oracle_grid_response_file }}.rsp"

- debug:
    msg: "Installing grid {{ grid_version }}"

- name: Prepare log directories
  file:
    path: "/tmp/grid_logs"
    mode: 0775
    state: directory

- name: Copy log catcher script in case of failure
  copy:
    src: "{{ role_path }}/files/grid_log_catcher.sh"
    dest: "/tmp/grid_log_catcher.sh"
    owner: "{{ rdbms_service_user.name }}"
    group: "{{ rdbms_service_user.group }}"
    mode: 0775
    remote_src: false  # Note to change back to true

- block:

    - name: run grid installer for 11g grid
      shell: "/tmp/grid_log_catcher.sh & {{ oracle_grid_installer_directory }}/runInstaller -silent -waitforcompletion -ignoreSysPrereqs -responseFile /tmp/{{ oracle_grid_response_file }}.rsp"
      args:
        creates: "{{ oracle_grid_oracle_home }}/bin/sqlplus"
      become: yes
      become_user:  "{{ rdbms_service_user.name }}"
      register: command_result
      failed_when: "'Successfully Setup Software.' not in command_result.stdout_lines"

    - name: apply grid patch 18370031 for 11g grid
      shell: "{{ oracle_grid_oracle_home }}/OPatch/opatch napply -oh {{ oracle_grid_oracle_home }} -local {{ oracle_patch_installer_directory }}/18370031 -silent"
      become: yes
      become_user: "{{ rdbms_service_user.name }}"
      register: patch_result
      failed_when: "'OPatch succeeded.' not in patch_result.stdout_lines"
      
  when: grid_version == '11g'

- block:

    - name: To avoid [FATAL] [INS-40954] error during 19g grid setup
      setup:
        filter: ansible_hostname

    - name: Check hostname {{ ansible_hostname }} already setup in /etc/hosts
      shell: grep {{ ansible_hostname }} /etc/hosts
      register: host_exists

    - name: Append the hostname to 127.0.0.1 entry in /etc/hosts if required
      lineinfile:
        backrefs: yes
        path: /etc/hosts
        regexp: '^(127\.0\.0\.1 .*)'
        line: '\1 {{ ansible_hostname }}' 
      when:  host_exists.rc != 0  
      register: append_host  

    - name: Run grid setup and apply release update 30899722 for 19c grid
      shell: "{{ oracle_grid_oracle_home }}/gridSetup.sh -silent -ignorePrereqFailure -waitForCompletion -noconfig -responseFile /tmp/{{ oracle_grid_response_file }}.rsp -applyRU {{ oracle_grid_installer_directory }}/30899722"
      become: yes
      become_user:  "{{ rdbms_service_user.name }}"
      register: command_result
      ignore_errors: yes

    - name: Even though errors were ignored, check if setup was successful
      fail:
        msg: "Setup of grid was unsuccessul"
      when: "'Successfully Setup Software.' not in command_result.stdout_lines and 'Successfully applied the patch.' not in command_result.stdout_lines"
    
    - name: Remove hostname {{ ansible_hostname }} from /etc/hosts if required
      lineinfile:
        backrefs: yes
        path: /etc/hosts
        regexp: '^(127\.0\.0\.1 .*) ({{ ansible_hostname }})$'
        line: '\1'
      when:  append_host.changed

  when: grid_version == '19c'

- name: run grid post-installation scripts as root
  become: yes
  become_user: root
  shell: "{{item}}"
  with_items:
    - "{{ oracle_database_inventory_location }}/orainstRoot.sh"
    - "{{ oracle_grid_oracle_home }}/root.sh"
  register: root_result
  failed_when: root_result.stderr_lines == "" and root_result.rc != 0
